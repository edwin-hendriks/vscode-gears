{
    "scopeName": "source.gears",
    "name": "GEARS",
    "fileTypes": ["sn"],

    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#sentences"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#types"
        }
    ],

    "repository": {
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.gears"
                },
                {
                    "begin": "//",
                    "end": "\\n",
                    "name": "comment.line.gears"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "begin": "(')",
                    "end": "(')",
                    "beginCaptures": {
                        "1": { "name": "string.quoted.single.gears" }
                    },
                    "endCaptures": {
                        "1": { "name": "string.quoted.single.gears" }
                    },
                    "patterns": [
                        { "include": "#placeholders" },
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.gears"
                        },
                        {
                            "match": "[^{'\\\\]*",
                            "name": "string.quoted.single.gears"
                        }
                    ]
                }
            ]
        },
        "sentences": {
            "patterns": [
                {
                    "begin": "(\")",
                    "end": "(\")",
                    "beginCaptures": {
                        "1": { "name": "entity.other.attribute-name.gears" }
                    },
                    "endCaptures": {
                        "1": { "name": "entity.other.attribute-name.gears" }
                    },
                    "patterns": [
                        { "include": "#placeholders" },
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.gears"
                        },
                        {
                            "match": "[^{\"\\\\]*",
                            "name": "entity.other.attribute-name.gears"
                        }
                    ],
                    "comment": "entity.other.attribute-name.gears entity.name.section.gears"
                }
            ]
        },
        "placeholders": {
            "patterns": [
                {
                    "begin": "{",
                    "end": "}",
                    "patterns": [
                        { "include": "$self" }
                    ]
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "match": "\\b(addWorkDays|asMillis|capitalize|concat|count|countDays|countNormalizedDays|currentDate|currentDateTime|date|datePart|day|month|year|years|num|findInText|first|format|get|getCollection|getInitiator|getInstanceId|integer|length|one|period|replace|round|roundDown|separatedBy|sorted|split|stringFromInteger|substring|sum|time|timePart|timestamp|toDays|tohtml|toUpperCase|uniqueId)\\(",
                    "captures": {
                        "1": {"name": "entity.name.function.gears"}
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(Language|Process|Reusable definitions|key|description|with subject|startable by)\\b",
                    "name": "keyword.other.gears"
                },
                {
                    "match": "\\b(For|One|Several|the|each|is created with|are created with|is deleted|are deleted|in|applies|with|numerous)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(and|or|not|old|exists|contains|mod|div|like|year|years|month|months|day|days)\\b",
                    "name": "keyword.operator.gears"
                },
                {
                    "match": "\\b(Results in)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(if|then|else)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(input|from|labeled|based on|chosen from|default)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(sorted by|ascending|descending)\\b",
                    "name": "keyword.other.gears"
                },
                {
                    "match": "\\b(identifies|unique|required|optional|displayed|label|group|opposite of|autovalue)\\b",
                    "name": "keyword.other.gears"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "match": "\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))f?\\b",
                    "name": "constant.numeric.gears"
                },
                {
                    "match": "\\b(true|false|empty)\\b",
                    "name": "constant.language.gears"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "match": ": *\\b(boolean|number|percentage|text|multiline|date|time|datetime|period|tuple|binary)\\b",
                    "captures": {
                        "1": {"name": "entity.name.type.gears"}
                    }
                }
            ]
        }
    }
}
