{
    "scopeName": "source.gears",
    "name": "GEARS",
    "fileTypes": ["sn"],

    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#sentences"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#types"
        }
    ],

    "repository": {
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.gears"
                },
                {
                    "begin": "//",
                    "end": "\\n",
                    "name": "comment.line.gears"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "begin": "(')",
                    "end": "(')", 
                    "beginCaptures": {
                        "1": { "name": "string.quoted.single.gears" }
                    },
                    "endCaptures": {
                        "1": { "name": "string.quoted.single.gears" }
                    }, 
                    "patterns": [
                        { "include": "#placeholders" },
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.gears"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.single.gears"
                        }
                    ]
                }
            ]
        },
        "sentences": {
            "patterns": [
                {
                    "begin": "(\")",
                    "end": "(\")",
                    "beginCaptures": {
                        "1": { "name": "entity.other.attribute-name.gears" }
                    },
                    "endCaptures": {
                        "1": { "name": "entity.other.attribute-name.gears" }
                    },
                    "patterns": [
                        { "include": "#placeholders" },
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.gears"
                        },
                        {
                            "match": "[^{\"\\\\]*",
                            "name": "entity.other.attribute-name.gears"
                        }
                    ],
                    "comment": "entity.other.attribute-name.gears entity.name.section.gears"
                }
            ]
        },
        "placeholders": {
            "patterns": [
                {
                    "begin": "{",
                    "end": "}",
                    "patterns": [
                        { "include": "$self" }
                    ]
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "match": "\\b([a-z][a-z0-9_]*)\\(",
                    "captures": {
                        "1": {"name": "entity.name.function.gears"}
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(language|process|reusable definitions|key|description|with subject|startable by)\\b",
                    "name": "keyword.other.gears"
                },
                {
                    "match": "\\b(for|the|only|first|last|each|one|multiple|the|is created with|are created with|is deleted|are deleted|is archived|are archived|in|applies|with|numerous)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(and|or|not|current|old|does not exist|exists|contains|intersects|mod|div|like|year|years|month|months|day|days|otherwise|error)\\b",
                    "name": "keyword.operator.gears"
                },
                {
                    "match": "\\b(results in)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(if|then|else)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(input|from|labeled|based on|chosen from|default|of type)\\b",
                    "name": "keyword.control.gears"
                },
                {
                    "match": "\\b(sorted by|ascending|descending)\\b",
                    "name": "keyword.other.gears"
                },
                {
                    "match": "\\b(unique|required|optional|autovalue|displayed|multiline|action|label|group|opposite of)\\b",
                    "name": "keyword.other.gears"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "match": "\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))f?\\b",
                    "name": "constant.numeric.gears"
                },
                {
                    "match": "\\b(true|false|empty)\\b",
                    "name": "constant.language.gears"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "match": ": *\\b(text|number|boolean|date|time|datetime|period|tuple|binary)\\b",
                    "captures": {
                        "1": {"name": "entity.name.type.gears"}
                    }
                }
            ]
        }
    }
}
