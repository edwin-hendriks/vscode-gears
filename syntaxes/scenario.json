{
    "scopeName": "scenario.gears",
    "name": "Scenario",
    "fileTypes": ["scenario", "scenarioignore"],

    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#types"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#markup"
        }
    ],

    "repository": {
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(with user|start process with key|process complete|assert|claim|submit|set datetime|let)\\b",
                    "name": "keyword.control.scenario"
                },
                {
                    "match": "\\b(as)\\b",
                    "name": "keyword.operator.scenario"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "match": "(\"[^\"\\n]*\")",
                    "name": "string.quoted.double.scenario"
                },
                {
                    "match": "('[^'\\n]*')",
                    "name": "string.quoted.single.scenario"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "match":"\\b(file|text|integer|decimal|boolean|datetime|date|time|period)\\b",
                    "name": "entity.name.type.scenario"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "match": "\\b[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\b",
                    "name": "constant.numeric.scenario"
                },
                {
                    "match": "\\b[0-9]{4}-[0-9]{2}-[0-9]{2}\\b",
                    "name": "constant.numeric.scenario"
                },
                {
                    "match": "\\b[0-9]{2}:[0-9]{2}:[0-9]{2}\\b",
                    "name": "constant.numeric.scenario"
                },
                {
                    "match": "\\b(?:-?([0-9]+\\.?[0-9]*)|(?:\\.[0-9]+))\\b",
                    "name": "constant.numeric.scenario"
                },
                {
                    "match": "\\b(true|false|null)\\b",
                    "name": "constant.language.scenario"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.scenario"
                },
                {
                    "begin": "//",
                    "end": "\\n",
                    "name": "comment.line.scenario"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "match": "\\b(the only|the first|the last|task)\\b",
                    "name": "variable.language.scenario"
                }
            ]
        },
        "markup": {
            "patterns": [
                {
                    "begin": "({{{)",
                    "end": "(}}})",
                    "beginCaptures": {
                        "1": { "name": "constant.numeric.scenario" }
                    },
                    "endCaptures": {
                        "1": { "name": "constant.numeric.scenario" }
                    },
                    "name": "string.unquoted.scenario"
                }
            ]
        }
    }
}